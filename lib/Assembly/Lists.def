// No include guards

// ===----------------------------------------------------------------------===
// === Instructions --------------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ASM_INSTRUCTION_DEF
#   define SC_ASM_INSTRUCTION_DEF(inst)
#endif

#ifndef SC_ASM_INSTRUCTION_SEPARATOR
#   define SC_ASM_INSTRUCTION_SEPARATOR
#endif

SC_ASM_INSTRUCTION_DEF(MoveInst)            SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(JumpInst)            SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(CallInst)            SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(CallExtInst)         SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(ReturnInst)          SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(TerminateInst)       SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(AllocaInst)          SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(CompareInst)         SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(TestInst)            SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(SetInst)             SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(UnaryArithmeticInst) SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(ArithmeticInst)      SC_ASM_INSTRUCTION_SEPARATOR
SC_ASM_INSTRUCTION_DEF(Label)          // Even though labels aren't instructions.

#undef SC_ASM_INSTRUCTION_DEF
#undef SC_ASM_INSTRUCTION_SEPARATOR

// ===----------------------------------------------------------------------===
// === Values --------------------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ASM_VALUE_DEF
#   define SC_ASM_VALUE_DEF(inst)
#endif

#ifndef SC_ASM_VALUE_SEPARATOR
#   define SC_ASM_VALUE_SEPARATOR
#endif

SC_ASM_VALUE_DEF(RegisterIndex) SC_ASM_VALUE_SEPARATOR
SC_ASM_VALUE_DEF(MemoryAddress) SC_ASM_VALUE_SEPARATOR
SC_ASM_VALUE_DEF(Value8)        SC_ASM_VALUE_SEPARATOR
SC_ASM_VALUE_DEF(Value16)       SC_ASM_VALUE_SEPARATOR
SC_ASM_VALUE_DEF(Value32)       SC_ASM_VALUE_SEPARATOR
SC_ASM_VALUE_DEF(Value64)

#undef SC_ASM_VALUE_DEF
#undef SC_ASM_VALUE_SEPARATOR

// ===----------------------------------------------------------------------===
// === Compare -------------------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ASM_COMPARE_DEF
#   define SC_ASM_COMPARE_DEF(elem, setInst, jumpInst)
#endif

SC_ASM_COMPARE_DEF(None,      none,  jmp)
SC_ASM_COMPARE_DEF(Less,      setl,  jl)
SC_ASM_COMPARE_DEF(LessEq,    setle, jle)
SC_ASM_COMPARE_DEF(Greater,   setg,  jg)
SC_ASM_COMPARE_DEF(GreaterEq, setge, jge)
SC_ASM_COMPARE_DEF(Eq,        sete,  je)
SC_ASM_COMPARE_DEF(NotEq,     setne, jne)

#undef SC_ASM_COMPARE_DEF

// ===----------------------------------------------------------------------===
// === Unary Arithmetic ----------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ASM_UNARY_ARITHMETIC_DEF
#   define SC_ASM_UNARY_ARITHMETIC_DEF(op, instName)
#endif

SC_ASM_UNARY_ARITHMETIC_DEF(BitwiseNot, "bnt")
SC_ASM_UNARY_ARITHMETIC_DEF(LogicalNot, "lnt")

#undef SC_ASM_UNARY_ARITHMETIC_DEF

// ===----------------------------------------------------------------------===
// === Arithmetic ----------------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ASM_ARITHMETIC_DEF
#   define SC_ASM_ARITHMETIC_DEF(op, instName)
#endif

SC_ASM_ARITHMETIC_DEF(Add, "add")
SC_ASM_ARITHMETIC_DEF(Sub, "sub")
SC_ASM_ARITHMETIC_DEF(Mul, "mul")
SC_ASM_ARITHMETIC_DEF(Div, "div")
SC_ASM_ARITHMETIC_DEF(Rem, "rem")
SC_ASM_ARITHMETIC_DEF(ShL, "shl")
SC_ASM_ARITHMETIC_DEF(ShR, "shr")
SC_ASM_ARITHMETIC_DEF(And, "and")
SC_ASM_ARITHMETIC_DEF(Or, "or")
SC_ASM_ARITHMETIC_DEF(XOr, "xor")

#undef SC_ASM_ARITHMETIC_DEF
