// No include guards

// ===----------------------------------------------------------------------===
// === List of all CFG Nodes -----------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_CGFNODE_DEF
#   define SC_CGFNODE_DEF(node, _)
#endif

SC_CGFNODE_DEF(Value,                 ABSTRACT)
SC_CGFNODE_DEF(Parameter,             CONCRETE)
SC_CGFNODE_DEF(User,                  ABSTRACT)

SC_CGFNODE_DEF(Constant,              ABSTRACT)
SC_CGFNODE_DEF(IntegralConstant,      CONCRETE)
SC_CGFNODE_DEF(FloatingPointConstant, CONCRETE)
SC_CGFNODE_DEF(UndefValue,            CONCRETE)

SC_CGFNODE_DEF(Callable,              ABSTRACT)
SC_CGFNODE_DEF(Function,              CONCRETE)
SC_CGFNODE_DEF(ExtFunction,           CONCRETE)
SC_CGFNODE_DEF(BasicBlock,            CONCRETE)

/// Instruction base classes
SC_CGFNODE_DEF(Instruction,           ABSTRACT)
SC_CGFNODE_DEF(UnaryInstruction,      ABSTRACT)
SC_CGFNODE_DEF(BinaryInstruction,     ABSTRACT)

/// Instructions
SC_CGFNODE_DEF(Alloca,                CONCRETE)
SC_CGFNODE_DEF(Load,                  CONCRETE)
SC_CGFNODE_DEF(Store,                 CONCRETE)
SC_CGFNODE_DEF(ConversionInst,        CONCRETE)
SC_CGFNODE_DEF(CompareInst,           CONCRETE)
SC_CGFNODE_DEF(UnaryArithmeticInst,   CONCRETE)
SC_CGFNODE_DEF(ArithmeticInst,        CONCRETE)
SC_CGFNODE_DEF(TerminatorInst,        ABSTRACT)
SC_CGFNODE_DEF(Goto,                  CONCRETE)
SC_CGFNODE_DEF(Branch,                CONCRETE)
SC_CGFNODE_DEF(Return,                CONCRETE)
SC_CGFNODE_DEF(Call,                  CONCRETE)
SC_CGFNODE_DEF(Phi,                   CONCRETE)
SC_CGFNODE_DEF(GetElementPointer,     CONCRETE)
SC_CGFNODE_DEF(ExtractValue,          CONCRETE)
SC_CGFNODE_DEF(InsertValue,           CONCRETE)
SC_CGFNODE_DEF(Select,                CONCRETE)

#undef SC_CGFNODE_DEF

// ===----------------------------------------------------------------------===
// === List of conversions -------------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_CONVERSION_DEF
#   define SC_CONVERSION_DEF(op, keyword)
#endif

SC_CONVERSION_DEF(Zext,    zext)
SC_CONVERSION_DEF(Sext,    sext)
SC_CONVERSION_DEF(Trunc,   trunc)
SC_CONVERSION_DEF(Fext,    fext)
SC_CONVERSION_DEF(Ftrunc,  ftrunc)
SC_CONVERSION_DEF(Bitcast, bitcast)

#undef SC_CONVERSION_DEF

// ===----------------------------------------------------------------------===
// === List of compare modes -----------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_COMPARE_MODE_DEF
#   define SC_COMPARE_MODE_DEF(op, keyword)
#endif

SC_COMPARE_MODE_DEF(Signed,   scmp)
SC_COMPARE_MODE_DEF(Unsigned, ucmp)
SC_COMPARE_MODE_DEF(Float,    fcmp)

#undef SC_COMPARE_MODE_DEF

// ===----------------------------------------------------------------------===
// === List of compare operations ------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_COMPARE_OPERATION_DEF
#   define SC_COMPARE_OPERATION_DEF(op, keyword)
#endif

SC_COMPARE_OPERATION_DEF(Less,      ls)
SC_COMPARE_OPERATION_DEF(LessEq,    leq)
SC_COMPARE_OPERATION_DEF(Greater,   grt)
SC_COMPARE_OPERATION_DEF(GreaterEq, geq)
SC_COMPARE_OPERATION_DEF(Equal,     eq)
SC_COMPARE_OPERATION_DEF(NotEqual,  neq)

#undef SC_COMPARE_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of unary arithmetic operations ---------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_UNARY_ARITHMETIC_OPERATION_DEF
#   define SC_UNARY_ARITHMETIC_OPERATION_DEF(op, keyword)
#endif

SC_UNARY_ARITHMETIC_OPERATION_DEF(BitwiseNot, bnt)
SC_UNARY_ARITHMETIC_OPERATION_DEF(LogicalNot, lnt)

#undef SC_UNARY_ARITHMETIC_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of arithmetic operations ---------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ARITHMETIC_OPERATION_DEF
#   define SC_ARITHMETIC_OPERATION_DEF(op, keyword)
#endif

SC_ARITHMETIC_OPERATION_DEF(Add,  add)
SC_ARITHMETIC_OPERATION_DEF(Sub,  sub)
SC_ARITHMETIC_OPERATION_DEF(Mul,  mul)
SC_ARITHMETIC_OPERATION_DEF(SDiv, sdiv)
SC_ARITHMETIC_OPERATION_DEF(UDiv, udiv)
SC_ARITHMETIC_OPERATION_DEF(SRem, srem)
SC_ARITHMETIC_OPERATION_DEF(URem, urem)
SC_ARITHMETIC_OPERATION_DEF(FAdd, fadd)
SC_ARITHMETIC_OPERATION_DEF(FSub, fsub)
SC_ARITHMETIC_OPERATION_DEF(FMul, fmul)
SC_ARITHMETIC_OPERATION_DEF(FDiv, fdiv)
SC_ARITHMETIC_OPERATION_DEF(LShL, lshl)
SC_ARITHMETIC_OPERATION_DEF(LShR, lshr)
SC_ARITHMETIC_OPERATION_DEF(AShL, ashl)
SC_ARITHMETIC_OPERATION_DEF(AShR, ashr)
SC_ARITHMETIC_OPERATION_DEF(And,  and)
SC_ARITHMETIC_OPERATION_DEF(Or,   or)
SC_ARITHMETIC_OPERATION_DEF(XOr,  xor)

#undef SC_ARITHMETIC_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of all types categories ----------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_TYPE_CATEGORY_DEF
#   define SC_TYPE_CATEGORY_DEF(type)
#endif

SC_TYPE_CATEGORY_DEF(Type)
SC_TYPE_CATEGORY_DEF(VoidType)
SC_TYPE_CATEGORY_DEF(PointerType)
SC_TYPE_CATEGORY_DEF(ArithmeticType)
SC_TYPE_CATEGORY_DEF(IntegralType)
SC_TYPE_CATEGORY_DEF(FloatType)
SC_TYPE_CATEGORY_DEF(StructureType)
SC_TYPE_CATEGORY_DEF(FunctionType)

#undef SC_TYPE_CATEGORY_DEF

// ===----------------------------------------------------------------------===
// === List of visibility kinds --------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_VISKIND_DEF
#   define SC_VISKIND_DEF(type)
#endif

SC_VISKIND_DEF(Extern)
SC_VISKIND_DEF(Static)

#undef SC_VISKIND_DEF
