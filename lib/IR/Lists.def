// No include guards

// ===----------------------------------------------------------------------===
// === List of all CFG Nodes -----------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_CGFNODE_DEF
#   define SC_CGFNODE_DEF(inst)
#endif

SC_CGFNODE_DEF(Value)
SC_CGFNODE_DEF(Parameter)
SC_CGFNODE_DEF(User)
SC_CGFNODE_DEF(Constant)
SC_CGFNODE_DEF(IntegralConstant)
SC_CGFNODE_DEF(FloatingPointConstant)
SC_CGFNODE_DEF(Function)
SC_CGFNODE_DEF(BasicBlock)
SC_CGFNODE_DEF(Instruction)
SC_CGFNODE_DEF(Alloca)
SC_CGFNODE_DEF(UnaryInstruction)
SC_CGFNODE_DEF(Load)
SC_CGFNODE_DEF(BinaryInstruction)
SC_CGFNODE_DEF(Store)
SC_CGFNODE_DEF(CompareInst)
SC_CGFNODE_DEF(UnaryArithmeticInst)
SC_CGFNODE_DEF(ArithmeticInst)
SC_CGFNODE_DEF(TerminatorInst)
SC_CGFNODE_DEF(Goto)
SC_CGFNODE_DEF(Branch)
SC_CGFNODE_DEF(Return)
SC_CGFNODE_DEF(FunctionCall)
SC_CGFNODE_DEF(ExtFunctionCall)
SC_CGFNODE_DEF(Phi)
SC_CGFNODE_DEF(GetElementPointer)
SC_CGFNODE_DEF(ExtractValue)

#undef SC_CGFNODE_DEF

// ===----------------------------------------------------------------------===
// === List of compare operations ------------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_COMPARE_OPERATION_DEF
#   define SC_COMPARE_OPERATION_DEF(inst, instShort)
#endif

SC_COMPARE_OPERATION_DEF(Less, ls)
SC_COMPARE_OPERATION_DEF(LessEq, leq)
SC_COMPARE_OPERATION_DEF(Greater, grt)
SC_COMPARE_OPERATION_DEF(GreaterEq, geq)
SC_COMPARE_OPERATION_DEF(Equal, eq)
SC_COMPARE_OPERATION_DEF(NotEqual, neq)

#undef SC_COMPARE_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of unary arithmetic operations ---------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_UNARY_ARITHMETIC_OPERATION_DEF
#   define SC_UNARY_ARITHMETIC_OPERATION_DEF(inst, instShort)
#endif

SC_UNARY_ARITHMETIC_OPERATION_DEF(Negation,   neg)
SC_UNARY_ARITHMETIC_OPERATION_DEF(BitwiseNot, bnt)
SC_UNARY_ARITHMETIC_OPERATION_DEF(LogicalNot, lnt)

#undef SC_UNARY_ARITHMETIC_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of arithmetic operations ---------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_ARITHMETIC_OPERATION_DEF
#   define SC_ARITHMETIC_OPERATION_DEF(inst, lowerCase)
#endif

SC_ARITHMETIC_OPERATION_DEF(Add,  add)
SC_ARITHMETIC_OPERATION_DEF(Sub,  sub)
SC_ARITHMETIC_OPERATION_DEF(Mul,  mul)
SC_ARITHMETIC_OPERATION_DEF(Div,  div)
SC_ARITHMETIC_OPERATION_DEF(UDiv, udiv)
SC_ARITHMETIC_OPERATION_DEF(Rem,  rem)
SC_ARITHMETIC_OPERATION_DEF(URem, urem)
SC_ARITHMETIC_OPERATION_DEF(LShL, lshl)
SC_ARITHMETIC_OPERATION_DEF(LShR, lshr)
SC_ARITHMETIC_OPERATION_DEF(AShL, ashl)
SC_ARITHMETIC_OPERATION_DEF(AShR, ashr)
SC_ARITHMETIC_OPERATION_DEF(And,  and)
SC_ARITHMETIC_OPERATION_DEF(Or,   or)
SC_ARITHMETIC_OPERATION_DEF(XOr,  xor)

#undef SC_ARITHMETIC_OPERATION_DEF

// ===----------------------------------------------------------------------===
// === List of all types categories ----------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_TYPE_CATEGORY_DEF
#   define SC_TYPE_CATEGORY_DEF(type)
#endif

SC_TYPE_CATEGORY_DEF(Type)
SC_TYPE_CATEGORY_DEF(VoidType)
SC_TYPE_CATEGORY_DEF(PointerType)
SC_TYPE_CATEGORY_DEF(ArithmeticType)
SC_TYPE_CATEGORY_DEF(IntegralType)
SC_TYPE_CATEGORY_DEF(FloatType)
SC_TYPE_CATEGORY_DEF(StructureType)
SC_TYPE_CATEGORY_DEF(FunctionType)

#undef SC_TYPE_CATEGORY_DEF
