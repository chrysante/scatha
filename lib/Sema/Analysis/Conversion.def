// No include guards

// ===----------------------------------------------------------------------===
// === List of conversions betweens reference qualifications ---------------===
// ===----------------------------------------------------------------------===

#ifndef SC_REFCONV_DEF
#   define SC_REFCONV_DEF(Name, Rank)
#endif

SC_REFCONV_DEF(None,         0)
SC_REFCONV_DEF(Dereference,  1)
SC_REFCONV_DEF(DerefExpl,    2)
SC_REFCONV_DEF(TakeAddress,  2)

#undef SC_REFCONV_DEF

// ===----------------------------------------------------------------------===
// === List of mutability conversions --------------------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_MUTCONV_DEF
#   define SC_MUTCONV_DEF(Name, Rank)
#endif

SC_MUTCONV_DEF(None,         0)
SC_MUTCONV_DEF(MutToConst,   1)

#undef SC_MUTCONV_DEF

// ===----------------------------------------------------------------------===
// === List of conversions between object types ----------------------------===
// ===----------------------------------------------------------------------===

#ifndef SC_OBJTYPECONV_DEF
#   define SC_OBJTYPECONV_DEF(Name, Rank)
#endif

SC_OBJTYPECONV_DEF(None,                          0)

/// Only valid for reference target types
    
SC_OBJTYPECONV_DEF(Array_FixedToDynamic,          1)

SC_OBJTYPECONV_DEF(Reinterpret_ArrayRef_ToByte,   2)
SC_OBJTYPECONV_DEF(Reinterpret_ArrayRef_FromByte, 2)
SC_OBJTYPECONV_DEF(Reinterpret_Value,             2)

/// ## Only valid for value target types

/// Truncating int -> int conversions
SC_OBJTYPECONV_DEF(SS_Trunc,                      2)
SC_OBJTYPECONV_DEF(SU_Trunc,                      2)
SC_OBJTYPECONV_DEF(US_Trunc,                      2)
SC_OBJTYPECONV_DEF(UU_Trunc,                      2)

/// Widening int -> int conversions
SC_OBJTYPECONV_DEF(SS_Widen,                      1)
SC_OBJTYPECONV_DEF(SU_Widen,                      1)
SC_OBJTYPECONV_DEF(US_Widen,                      1)
SC_OBJTYPECONV_DEF(UU_Widen,                      1)

/// Zero extend; Source operand is unsigned, dest can be signed or unsigned
SC_OBJTYPECONV_DEF(Float_Trunc,                   2)

/// Float extend; Source and dest operands are floats
SC_OBJTYPECONV_DEF(Float_Widen,                   1)

/// Signed int to float conversion
SC_OBJTYPECONV_DEF(SignedToFloat,                 2)

/// Unsigned int to float conversion
SC_OBJTYPECONV_DEF(UnsignedToFloat,               2)

/// Float to signed int conversion
SC_OBJTYPECONV_DEF(FloatToSigned,                 2)

/// Float to unsigned int conversion
SC_OBJTYPECONV_DEF(FloatToUnsigned,               2)

#undef SC_OBJTYPECONV_DEF
