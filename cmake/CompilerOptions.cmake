
function(SCSetCompilerOptions target)
  if(NOT SCATHA_DEV_MODE)
    return()
  endif()

  if (WIN32)
    if (MSVC)
      #target_compile_options(${target} PRIVATE "/W3")
      target_compile_options(${target} PRIVATE "/D_CRT_SECURE_NO_WARNINGS")
      target_compile_options(${target} PRIVATE "/MP")
    endif()
  else()
    target_compile_options(${target} PRIVATE "-Wall")
    target_compile_options(${target} PRIVATE "-Wextra")
    target_compile_options(${target} PRIVATE "-pedantic")

    target_compile_options(${target} PRIVATE "-Wdeprecated")
    target_compile_options(${target} PRIVATE "-Wmissing-declarations")
    target_compile_options(${target} PRIVATE "-Wnon-virtual-dtor")
    target_compile_options(${target} PRIVATE "-Wnull-dereference")
    target_compile_options(${target} PRIVATE "-Woverloaded-virtual")
    target_compile_options(${target} PRIVATE "-Wsign-conversion")
    # We enable this later, this triggers too often
    #target_compile_options(${target} PRIVATE "-Wshadow")
    target_compile_options(${target} PRIVATE "-Wunused")
  endif()
endfunction()

set(SANITIZE "" CACHE STRING "Comma-separated list of sanitizers (e.g. address,undefined)")

if(SANITIZE)
    # Split comma-separated list into semicolon-separated CMake list
    string(REPLACE "," ";" SAN_LIST "${SANITIZE}")

    set(SANITIZER_FLAGS "")
    foreach(SAN ${SAN_LIST})
        string(STRIP "${SAN}" SAN)
        if(NOT SAN STREQUAL "")
            list(APPEND SANITIZER_FLAGS "-fsanitize=${SAN}")
            message(STATUS "Using sanitizer: ${SAN}")
        endif()
        if(SAN STREQUAL "undefined")
            set(HAVE_UBSAN TRUE)
        endif()
    endforeach()

    if(SANITIZER_FLAGS)
        add_compile_options("$<$<CONFIG:Debug>:${SANITIZER_FLAGS}>")
        add_link_options("$<$<CONFIG:Debug>:${SANITIZER_FLAGS}>")
    endif()

    if($HAVE_UBSAN)
        add_compile_options("$<$<CONFIG:Debug>:-fno-sanitize=function>")
    endif()
endif()
